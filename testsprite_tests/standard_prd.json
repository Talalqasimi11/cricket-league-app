{
  "meta": {
    "project": "Cricket League Management Application",
    "date": "2025-10-17",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "The Cricket League Management Application is a comprehensive platform designed to streamline the organization, management, and tracking of cricket tournaments and matches. It enables team captains to register and manage teams, create and manage tournaments, perform live ball-by-ball scoring, and access detailed player and team statistics, accessible via a mobile app backed by a robust Node.js API.",
  "core_goals": [
    "Automate and digitize cricket tournament and match management for amateur and semi-professional leagues.",
    "Enable real-time live ball-by-ball match scoring accessible to players, captains, and spectators.",
    "Provide comprehensive player and team statistics automatically calculated from match data.",
    "Offer intuitive team and player management tools for captains and owners.",
    "Ensure secure user authentication and authorization with progressive lockouts and token management.",
    "Create a scalable and maintainable backend architecture with performance and security best practices."
  ],
  "key_features": [
    "User Authentication with phone-based registration, JWT token management, password reset, and security throttling.",
    "Team Management including team creation, player addition, captain/owner designation, and team dashboard.",
    "Tournament Management with tournament creation, team registration (registered and temporary teams), scheduling, and management features.",
    "Match Management supporting match creation, status updates, and player lineups.",
    "Live Match Scoring with real-time ball-by-ball input, innings management, automatic updates to innings and player match stats, and auto-innings ending rules.",
    "Player Statistics aggregating across matches and tournaments with detailed dashboards.",
    "Scorecards and detailed match statistics available publicly after match completion.",
    "Feedback System with profanity filtering, abuse monitoring, and optional user identification.",
    "Comprehensive API with route protection, rate limiting, and detailed error handling.",
    "Flutter mobile app front-end supporting authentication, live scoring, team and tournament management, statistics viewing, and offline data caching."
  ],
  "user_flow_summary": [
    "User registers via phone number; team is automatically created and user becomes captain.",
    "User logs in and receives access and refresh JWT tokens with refresh token stored securely.",
    "Team owner/captain manages team roster by adding or updating players.",
    "User creates or joins tournaments, registers teams (registered or temporary), and schedules matches.",
    "Tournament creator or authorized captain manages match statuses and starts live scoring sessions.",
    "Scorers record ball-by-ball deliveries updating innings and player statistics in real-time.",
    "Users view live scores, player statistics, historical scorecards, and tournament summaries.",
    "Users submit feedback optionally authenticated, with system validating content and filtering profanity.",
    "Users reset passwords via tokenized flow with security checks and token revocation after use."
  ],
  "validation_criteria": [
    "Successful user registration creates a unique team and captain association; rejects invalid phone or password inputs.",
    "Login enforces progressive lockouts after specified failed attempts; tokens validate and refresh flows work securely.",
    "Team management endpoints enforce ownership and role checks; team and player data persist correctly.",
    "Tournament and match creation enforce required fields, ownership checks, and valid status transitions.",
    "Live scoring correctly updates innings and player stats; enforces authorization checks; respects ball number and innings rules.",
    "Scorecards and statistics endpoints return accurate, aggregated, and sorted data; invalid inputs handled gracefully.",
    "Feedback submissions enforce length and profanity filters; store valid feedback including IP and user agent details.",
    "API endpoints enforce rate limiting, authentication, and return standard error codes and messages.",
    "Frontend screens correctly reflect backend data, support offline caching, and secure token storage.",
    "Testing covers backend controllers, APIs, authentication flows, and frontend UI and integration scenarios with specified coverage targets."
  ],
  "code_summary": {
    "tech_stack": [
      "Dart",
      "Flutter",
      "Node.js",
      "Express.js",
      "MySQL",
      "JWT",
      "REST API",
      "Mobile App",
      "CORS",
      "Rate Limiting"
    ],
    "features": [
      {
        "name": "User Authentication",
        "description": "Complete authentication system with login, registration, password reset, and JWT token management",
        "files": [
          "frontend/lib/features/auth/screens/login_screen.dart",
          "frontend/lib/features/auth/screens/register_screen.dart",
          "frontend/lib/features/auth/screens/forgot_password_screen.dart",
          "backend/controllers/authController.js",
          "backend/routes/authRoutes.js",
          "backend/middleware/authMiddleware.js"
        ]
      },
      {
        "name": "Team Management",
        "description": "Team creation, player management, team dashboard, and team statistics",
        "files": [
          "frontend/lib/features/teams/screens/my_team_screen.dart",
          "frontend/lib/features/teams/screens/team_dashboard_screen.dart",
          "frontend/lib/features/teams/screens/player_dashboard_screen.dart",
          "frontend/lib/features/teams/models/player.dart",
          "backend/controllers/teamController.js",
          "backend/routes/teamRoutes.js"
        ]
      },
      {
        "name": "Tournament Management",
        "description": "Tournament creation, team registration, tournament scheduling, and tournament management",
        "files": [
          "frontend/lib/features/tournaments/screens/tournaments_screen.dart",
          "frontend/lib/features/tournaments/screens/tournament_create_screen.dart",
          "frontend/lib/features/tournaments/screens/tournament_details_creator_screen.dart",
          "frontend/lib/features/tournaments/screens/tournament_details_viewer_screen.dart",
          "frontend/lib/features/tournaments/screens/tournament_team_registration_screen.dart",
          "frontend/lib/features/tournaments/screens/tournament_draws_screen.dart",
          "frontend/lib/features/tournaments/models/tournament_model.dart",
          "frontend/lib/features/tournaments/widgets/tournament_card.dart",
          "frontend/lib/features/tournaments/widgets/tournament_filter_tabs.dart",
          "backend/controllers/tournamentController.js",
          "backend/controllers/tournamentTeamController.js",
          "backend/controllers/tournamentMatchController.js",
          "backend/routes/tournamentRoutes.js",
          "backend/routes/tournamentTeamRoutes.js",
          "backend/routes/tournamentMatchRoutes.js"
        ]
      },
      {
        "name": "Live Match Scoring",
        "description": "Real-time ball-by-ball scoring, live match viewing, and match statistics",
        "files": [
          "frontend/lib/features/matches/screens/live_match_scoring_screen.dart",
          "frontend/lib/features/matches/screens/live_match_view_screen.dart",
          "frontend/lib/features/matches/screens/matches_screen.dart",
          "frontend/lib/features/matches/screens/scorecard_screen.dart",
          "frontend/lib/features/matches/screens/match_statistics_screen.dart",
          "frontend/lib/features/matches/screens/create_match_screen.dart",
          "frontend/lib/features/matches/screens/select_lineup_screen.dart",
          "frontend/lib/features/matches/screens/post_match_screen.dart",
          "frontend/lib/features/matches/models/match_model.dart",
          "frontend/lib/features/matches/models/ball_model.dart",
          "backend/controllers/liveScoreController.js",
          "backend/controllers/liveScoreViewerController.js",
          "backend/controllers/BallByBallController.js",
          "backend/controllers/matchFinalizationController.js",
          "backend/controllers/matchInningsController.js",
          "backend/controllers/scorecardController.js",
          "backend/routes/liveScoreRoutes.js",
          "backend/routes/liveScoreViewerRoutes.js",
          "backend/routes/ballByBallRoutes.js",
          "backend/routes/matchFinalizationRoutes.js",
          "backend/routes/matchInningsRoutes.js",
          "backend/routes/scorecardRoutes.js"
        ]
      },
      {
        "name": "Player Statistics",
        "description": "Player performance tracking, statistics calculation, and player dashboards",
        "files": [
          "frontend/lib/screens/player/viewer/player_dashboard_screen.dart",
          "backend/controllers/playerController.js",
          "backend/controllers/playerStatsController.js",
          "backend/controllers/playerMatchStatsController.js",
          "backend/routes/playerRoutes.js",
          "backend/routes/playerStatsRoutes.js",
          "backend/routes/playerMatchStatsRoutes.js"
        ]
      },
      {
        "name": "Team Tournament Summary",
        "description": "Team performance in tournaments, tournament standings, and team statistics",
        "files": [
          "backend/controllers/teamTournamentSummaryController.js",
          "backend/routes/teamTournamentSummaryRoutes.js"
        ]
      },
      {
        "name": "Feedback System",
        "description": "User feedback collection, contact support, and feedback management",
        "files": [
          "frontend/lib/screens/support/feedback_screen.dart",
          "frontend/lib/screens/support/contact_screen.dart",
          "backend/controllers/feedbackController.js",
          "backend/routes/feedbackRoutes.js"
        ]
      },
      {
        "name": "API Client",
        "description": "Centralized API communication with JWT token management and error handling",
        "files": [
          "frontend/lib/core/api_client.dart",
          "frontend/lib/services/api_service.dart",
          "frontend/lib/core/json_utils.dart"
        ]
      },
      {
        "name": "Theme Management",
        "description": "Dark/light theme support with persistent theme preferences",
        "files": [
          "frontend/lib/core/theme_notifier.dart"
        ]
      },
      {
        "name": "Navigation",
        "description": "App navigation with bottom navigation and route management",
        "files": [
          "frontend/lib/widgets/bottom_nav.dart",
          "frontend/lib/main.dart"
        ]
      },
      {
        "name": "Home Dashboard",
        "description": "Main dashboard with quick access to key features",
        "files": [
          "frontend/lib/screens/home/home_screen.dart",
          "frontend/lib/screens/splash/splash_screen.dart"
        ]
      },
      {
        "name": "Account Management",
        "description": "User account settings and profile management",
        "files": [
          "frontend/lib/screens/settings/account_screen.dart"
        ]
      },
      {
        "name": "Backend API Server",
        "description": "Express.js REST API server with CORS, rate limiting, and logging",
        "files": [
          "backend/index.js",
          "backend/config/validateEnv.js",
          "backend/config/db.js"
        ]
      },
      {
        "name": "Database Migrations",
        "description": "Database schema management and migrations",
        "files": [
          "backend/migrations/2025-10-17_create_all_tables.sql",
          "backend/migrations/2025-10-17_create_tournaments_table.sql",
          "backend/migrations/2025-10-13_01_create_tournament_matches.sql",
          "backend/migrations/2025-10-13_add_owner_and_captains_to_teams.sql",
          "backend/migrations/2025-10-13_add_tournament_match_links.sql",
          "backend/migrations/2025-10-13_add_users_captain_name.sql",
          "backend/migrations/2025-10-15_add_refresh_tokens.sql",
          "backend/migrations/2025-10-16_add_indexes.sql",
          "backend/migrations/2025-10-17_add_auth_failures.sql",
          "backend/migrations/2025-10-17_add_test_user.sql",
          "backend/migrations/2025-10-17_remove_owner_and_captain_name_columns.sql"
        ]
      },
      {
        "name": "Test Infrastructure",
        "description": "Backend unit tests and test environment setup",
        "files": [
          "backend/__tests__/auth.test.js",
          "backend/__tests__/feedback.test.js",
          "backend/__tests__/teams.test.js",
          "backend/__tests__/tournaments.test.js",
          "backend/__tests__/README.md",
          "backend/scripts/setupTestEnvironment.js",
          "backend/scripts/seedTestData.js",
          "backend/scripts/cleanupTestData.js",
          "backend/scripts/cleanupTestEnvironment.js",
          "backend/scripts/runMigrations.js"
        ]
      },
      {
        "name": "Flutter Test Suite",
        "description": "Frontend Flutter widget and integration tests",
        "files": [
          "frontend/test/widget_test.dart",
          "frontend/test/login_validation_test.dart"
        ]
      }
    ]
  }
}
