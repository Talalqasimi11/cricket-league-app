{
  "meta": {
    "project": "Cricket League Admin Panel",
    "date": "2025-10-20",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "The Cricket League Admin Panel is a React-based web application providing secure, role-based administrative access to manage users, teams, and view system statistics for the Cricket League platform. It enhances operational efficiency by centralizing control functions including user management, team management, and real-time dashboard insights.",
  "core_goals": [
    "Enable secure admin authentication with JWT and role-based access control.",
    "Provide real-time system overview via dashboard statistics for informed decision-making.",
    "Allow comprehensive user management including viewing user details, managing admin privileges, and user deletion with safety checks.",
    "Facilitate team management with capabilities to view, edit, and delete teams along with detailed player information.",
    "Ensure robust security measures including authentication requirements, self-protection for admins, and data validation.",
    "Support scalability and maintainability using modern React hooks, Tailwind CSS, and Axios for API interactions."
  ],
  "key_features": [
    "Admin Authentication with secure JWT tokens and role-based access control ensuring only authorized admins can access the panel.",
    "Dashboard displaying key system metrics such as total users, admins, teams, tournaments, and matches in real-time.",
    "User Management allowing listing all users, viewing their details, granting or revoking admin privileges, and deleting users with safeguards.",
    "Team Management featuring listing all teams with statistics, viewing detailed team and player information, editing team details such as name, location, and logo, and deleting teams cautiously.",
    "API integration with backend endpoints to handle authentication, user and team CRUD operations.",
    "Automatic logout on token expiration and comprehensive error handling for smooth UX.",
    "Frontend tech stack includes React 18 with functional components and hooks, Tailwind CSS for styling, Axios for API communication, and local storage token persistence."
  ],
  "user_flow_summary": [
    "Admin logs into the panel using phone number and password which is authenticated via secure JWT mechanism.",
    "Upon successful login, admin is redirected to the dashboard displaying real-time system statistics.",
    "From the dashboard, admin navigates to User Management to view all users, grant or revoke admin rights, or delete users (excluding self-deletion).",
    "Admin visits Team Management to browse teams, view detailed information about teams and their players, edit team details, or delete teams with safeguards against deleting teams involved in matches.",
    "All actions verify admin role and JWT token validity; on token expiry, admin is logged out and prompted to re-login.",
    "Any data input or modification requests are validated server-side to prevent errors or unauthorized changes."
  ],
  "validation_criteria": [
    "Admin authentication correctly issues JWT tokens and enforces role-based access control.",
    "Dashboard statistics accurately reflect current system state including totals of users, admins, teams, tournaments, and matches.",
    "User management CRUD operations execute successfully with correct admin privilege enforcement, including safeguards against self-deletion and self-role removal.",
    "Team management allows viewing, editing, and deleting teams with all validations passed and data integrity maintained.",
    "API endpoints respond correctly with appropriate status codes and data formats as per documentation.",
    "Frontend components render correctly with applied styling and respond properly to API responses including error handling.",
    "Token expiration triggers automatic logout and session cleanup.",
    "Security measures prevent unauthorized admin access and actions.",
    "Setup and deployment instructions lead to a fully functional admin panel with all features operational."
  ],
  "code_summary": {
    "tech_stack": [
      "JavaScript",
      "React",
      "Axios",
      "TailwindCSS"
    ],
    "features": [
      {
        "name": "Admin Authentication",
        "description": "Secure admin login with JWT token authentication and role-based access control",
        "files": [
          "src/components/Login.js",
          "src/services/api.js"
        ],
        "api_doc": {
          "paths": {
            "/api/auth/login": {
              "post": {
                "summary": "Admin Login",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "phone_number": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "phone_number",
                          "password"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Login successful",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "token": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Dashboard Statistics",
        "description": "Display system overview with key metrics and statistics",
        "files": [
          "src/components/Dashboard.js",
          "src/services/api.js"
        ],
        "api_doc": {
          "paths": {
            "/api/admin/dashboard": {
              "get": {
                "summary": "Get Dashboard Statistics",
                "responses": {
                  "200": {
                    "description": "Dashboard stats",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "totalUsers": {
                              "type": "number"
                            },
                            "totalAdmins": {
                              "type": "number"
                            },
                            "totalTeams": {
                              "type": "number"
                            },
                            "totalTournaments": {
                              "type": "number"
                            },
                            "totalMatches": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "User Management",
        "description": "Manage users, view user details, grant/revoke admin privileges, and delete users",
        "files": [
          "src/components/UserManagement.js",
          "src/services/api.js"
        ],
        "api_doc": {
          "paths": {
            "/api/admin/users": {
              "get": {
                "summary": "Get All Users",
                "responses": {
                  "200": {
                    "description": "List of users",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "phone_number": {
                                "type": "string"
                              },
                              "team_name": {
                                "type": "string"
                              },
                              "team_location": {
                                "type": "string"
                              },
                              "is_admin": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/api/admin/users/{id}/admin": {
              "put": {
                "summary": "Update User Admin Status",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "number"
                    }
                  }
                ],
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "is_admin": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/api/admin/users/{id}": {
              "delete": {
                "summary": "Delete User",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "number"
                    }
                  }
                ]
              }
            }
          }
        }
      },
      {
        "name": "Team Management",
        "description": "View teams, edit team details, view team information, and delete teams",
        "files": [
          "src/components/TeamManagement.js",
          "src/services/api.js"
        ],
        "api_doc": {
          "paths": {
            "/api/admin/teams": {
              "get": {
                "summary": "Get All Teams",
                "responses": {
                  "200": {
                    "description": "List of teams",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "team_name": {
                                "type": "string"
                              },
                              "team_location": {
                                "type": "string"
                              },
                              "team_logo_url": {
                                "type": "string"
                              },
                              "player_count": {
                                "type": "number"
                              },
                              "owner_phone": {
                                "type": "string"
                              },
                              "owner_is_admin": {
                                "type": "boolean"
                              },
                              "matches_played": {
                                "type": "number"
                              },
                              "matches_won": {
                                "type": "number"
                              },
                              "trophies": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/api/admin/teams/{id}": {
              "get": {
                "summary": "Get Team Details",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "number"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Team details with players",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "team": {
                              "type": "object"
                            },
                            "players": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  },
                                  "player_name": {
                                    "type": "string"
                                  },
                                  "player_role": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "put": {
                "summary": "Update Team",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "number"
                    }
                  }
                ],
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "team_name": {
                            "type": "string"
                          },
                          "team_location": {
                            "type": "string"
                          },
                          "team_logo_url": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "delete": {
                "summary": "Delete Team",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "number"
                    }
                  }
                ]
              }
            }
          }
        }
      }
    ]
  }
}
